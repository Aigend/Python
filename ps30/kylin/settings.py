"""
Django settings for kylin project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6jm6^v2&#bunv)m$ovtjvk&1$+&s!fn^pxr0-qp($5lyfi=^iv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # 会在 debug 日志里输出错误信息，而不是输入 HTTP 的返回码 生产环境中，它应设置为 false

ALLOWED_HOSTS = ['*', ]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',  # admin管理后台站点
    'django.contrib.auth',  # 身份认证系统
    'django.contrib.contenttypes',  # 内容类型框架
    'django.contrib.sessions',  # 会话框架
    'django.contrib.messages',  # 消息框架
    'django.contrib.staticfiles',  # 静态文件管理框架
    "mysite",  # 或者"myapp.apps.MyappConfig" 应用配置文件,
    # 增加指向该应用的配置文件的链接 python manage.py makemigrations polls
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',  # django使用session
    # 'mysite.middleware.timeit_middleware',  # 自定义中间件
    # 'mysite.middleware.LoginRequiredMiddleware',  # 自定义中间件
]

# LOGIN_URL = "/admin/login/"  # 自己定义的，用于验证中间件的使用
# OPEN_URLS = ["/admin/"]  # 自己定义的，用于验证中间件的使用

ROOT_URLCONF = 'kylin.urls'  # 根URL配置

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'templates', 'dist'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'mysite.context_processors.global_site_name'  # 全局模版变量
            ],
        },
    },
]

SITE_NAME = 'MY_SITE'  # 全局模版变量

WSGI_APPLICATION = 'kylin.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # django.db.backends.mysql
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
#         'LOCATION': 'unique-snowflake'  # 名字随便定
#     }
# }

# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://10.143.16.72:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#             "PASSWORD": "super@man",
#             "IGNORE_EXCEPTIONS": True,
#         }
#     }
# }
# REDIS_TIMEOUT = 60
# CUBES_REDIS_TIMEOUT=60*60
# NEVER_REDIS_TIMEOUT=365*24*60*60
# DJANGO_REDIS_IGNORE_EXCEPTIONS = True

# 配置session存储
# SESSION_ENGINE = "django.contrib.sessions.backends.cache"
# SESSION_CACHE_ALIAS = "default"


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = "zh-hans"

# TIME_ZONE = 'UTC'
TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# http://192.168.1.2:8000/static/common_static/myapp/photo.png
# 那么就相当与访问/home/mysite/common_static/myap/photo.png
STATIC_URL = '/static/'

# BASE_DIR 是项目的绝对地址
# STATIC_ROOT 是在部署静态文件时(pyhtonmanage.pycollectstatic)所有的静态文静聚合的目录
# STATIC_ROOT = os.path.join(BASE_DIR, 'collect_static')

# 让django知道你把一些静态文件放到app以外的公共文件夹中
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "templates/dist/static"),  # 加上这条
)

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # 对于此文件夹权限，建议使用sudo chmod 755 media命令设置

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

if __name__ == '__main__':
    print(Path(__file__).resolve().parent.parent)
