# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nfc_authorization.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='nfc_authorization.proto',
  package='',
  serialized_pb=_b('\n\x17nfc_authorization.proto\"\x83\x01\n\nAccessInfo\x12\x0f\n\x07user_id\x18\x01 \x02(\t\x12\x11\n\tdevice_id\x18\x02 \x02(\t\x12\x12\n\nvehicle_id\x18\x03 \x02(\t\x12\x13\n\x0b\x61\x63\x63\x65ss_mode\x18\x04 \x02(\t\x12\x15\n\rrefresh_token\x18\x05 \x02(\t\x12\x11\n\tperm_list\x18\x06 \x03(\t\"R\n\nVirtualKey\x12\x13\n\x0b\x63\x65rtificate\x18\x01 \x02(\t\x12\x1b\n\x06\x61\x63\x63\x65ss\x18\x02 \x02(\x0b\x32\x0b.AccessInfo\x12\x12\n\naccess_sig\x18\x03 \x02(\t\"!\n\x06\x41\x45SKey\x12\x0b\n\x03key\x18\x01 \x02(\x0c\x12\n\n\x02iv\x18\x02 \x02(\x0c\"}\n\x10NFCAuthorization\x12\x17\n\x0f\x65nc_virtual_key\x18\x01 \x02(\x0c\x12\x13\n\x0b\x65nc_aes_key\x18\x02 \x02(\x0c\x12\x0e\n\x06\x61\x63tion\x18\x03 \x02(\t\x12\x11\n\tdevice_id\x18\x04 \x02(\t\x12\x0b\n\x03ts1\x18\x05 \x02(\x05\x12\x0b\n\x03sig\x18\x06 \x02(\t')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_ACCESSINFO = _descriptor.Descriptor(
  name='AccessInfo',
  full_name='AccessInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='AccessInfo.user_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_id', full_name='AccessInfo.device_id', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vehicle_id', full_name='AccessInfo.vehicle_id', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='access_mode', full_name='AccessInfo.access_mode', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='refresh_token', full_name='AccessInfo.refresh_token', index=4,
      number=5, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='perm_list', full_name='AccessInfo.perm_list', index=5,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=159,
)


_VIRTUALKEY = _descriptor.Descriptor(
  name='VirtualKey',
  full_name='VirtualKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='certificate', full_name='VirtualKey.certificate', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='access', full_name='VirtualKey.access', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='access_sig', full_name='VirtualKey.access_sig', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=161,
  serialized_end=243,
)


_AESKEY = _descriptor.Descriptor(
  name='AESKey',
  full_name='AESKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='AESKey.key', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='iv', full_name='AESKey.iv', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=245,
  serialized_end=278,
)


_NFCAUTHORIZATION = _descriptor.Descriptor(
  name='NFCAuthorization',
  full_name='NFCAuthorization',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enc_virtual_key', full_name='NFCAuthorization.enc_virtual_key', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='enc_aes_key', full_name='NFCAuthorization.enc_aes_key', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action', full_name='NFCAuthorization.action', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_id', full_name='NFCAuthorization.device_id', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ts1', full_name='NFCAuthorization.ts1', index=4,
      number=5, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sig', full_name='NFCAuthorization.sig', index=5,
      number=6, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=280,
  serialized_end=405,
)

_VIRTUALKEY.fields_by_name['access'].message_type = _ACCESSINFO
DESCRIPTOR.message_types_by_name['AccessInfo'] = _ACCESSINFO
DESCRIPTOR.message_types_by_name['VirtualKey'] = _VIRTUALKEY
DESCRIPTOR.message_types_by_name['AESKey'] = _AESKEY
DESCRIPTOR.message_types_by_name['NFCAuthorization'] = _NFCAUTHORIZATION

AccessInfo = _reflection.GeneratedProtocolMessageType('AccessInfo', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSINFO,
  __module__ = 'nfc_authorization_pb2'
  # @@protoc_insertion_point(class_scope:AccessInfo)
  ))
_sym_db.RegisterMessage(AccessInfo)

VirtualKey = _reflection.GeneratedProtocolMessageType('VirtualKey', (_message.Message,), dict(
  DESCRIPTOR = _VIRTUALKEY,
  __module__ = 'nfc_authorization_pb2'
  # @@protoc_insertion_point(class_scope:VirtualKey)
  ))
_sym_db.RegisterMessage(VirtualKey)

AESKey = _reflection.GeneratedProtocolMessageType('AESKey', (_message.Message,), dict(
  DESCRIPTOR = _AESKEY,
  __module__ = 'nfc_authorization_pb2'
  # @@protoc_insertion_point(class_scope:AESKey)
  ))
_sym_db.RegisterMessage(AESKey)

NFCAuthorization = _reflection.GeneratedProtocolMessageType('NFCAuthorization', (_message.Message,), dict(
  DESCRIPTOR = _NFCAUTHORIZATION,
  __module__ = 'nfc_authorization_pb2'
  # @@protoc_insertion_point(class_scope:NFCAuthorization)
  ))
_sym_db.RegisterMessage(NFCAuthorization)


# @@protoc_insertion_point(module_scope)
